<tokens>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<keyword> function </keyword>
	<keyword> void </keyword>
	<identifier> main </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> var </keyword>
	<identifier> Array </identifier>
	<identifier> a </identifier>
	<symbol> ; </symbol>
	<keyword> var </keyword>
	<keyword> int </keyword>
	<identifier> length </identifier>
	<symbol> ; </symbol>
	<keyword> var </keyword>
	<keyword> int </keyword>
	<identifier> i </identifier>
	<symbol> , </symbol>
	<identifier> sum </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> length </identifier>
	<symbol> = </symbol>
	<identifier> Keyboard </identifier>
	<symbol> . </symbol>
	<identifier> readInt </identifier>
	<symbol> ( </symbol>
	<stringConstant> HOW MANY NUMBERS?  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> a </identifier>
	<symbol> = </symbol>
	<identifier> Array </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<identifier> length </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> i </identifier>
	<symbol> = </symbol>
	<integerConstant> 0 </integerConstant>
	<symbol> ; </symbol>
	<keyword> while </keyword>
	<symbol> ( </symbol>
	<identifier> i </identifier>
	<symbol> &lt; </symbol>
	<identifier> length </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> let </keyword>
	<identifier> a </identifier>
	<symbol> [ </symbol>
	<identifier> i </identifier>
	<symbol> ] </symbol>
	<symbol> = </symbol>
	<identifier> Keyboard </identifier>
	<symbol> . </symbol>
	<identifier> readInt </identifier>
	<symbol> ( </symbol>
	<stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> i </identifier>
	<symbol> = </symbol>
	<identifier> i </identifier>
	<symbol> + </symbol>
	<integerConstant> 1 </integerConstant>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> let </keyword>
