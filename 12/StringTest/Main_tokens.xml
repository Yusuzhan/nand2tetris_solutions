<tokens>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<keyword> function </keyword>
	<keyword> void </keyword>
	<identifier> main </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> var </keyword>
	<identifier> String </identifier>
	<identifier> s </identifier>
	<symbol> ; </symbol>
	<keyword> var </keyword>
	<identifier> String </identifier>
	<identifier> i </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<integerConstant> 0 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<integerConstant> 6 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<integerConstant> 97 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<integerConstant> 98 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<integerConstant> 99 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<integerConstant> 100 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<integerConstant> 101 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> new,appendChar:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> i </identifier>
	<symbol> = </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<integerConstant> 6 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> i </identifier>
	<symbol> . </symbol>
	<identifier> setInt </identifier>
	<symbol> ( </symbol>
	<integerConstant> 12345 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> setInt:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<identifier> i </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> i </identifier>
	<symbol> . </symbol>
	<identifier> setInt </identifier>
	<symbol> ( </symbol>
	<symbol> - </symbol>
	<integerConstant> 32767 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> setInt:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<identifier> i </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> length:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> length </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> charAt[2]:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> charAt </identifier>
	<symbol> ( </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> setCharAt </identifier>
	<symbol> ( </symbol>
	<integerConstant> 2 </integerConstant>
	<symbol> , </symbol>
	<integerConstant> 45 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> setCharAt(2,'-'):  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> eraseLastChar </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> eraseLastChar:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<stringConstant> 456 </stringConstant>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> intValue:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> intValue </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> s </identifier>
	<symbol> = </symbol>
	<stringConstant> -32123 </stringConstant>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> intValue:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> intValue </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> backSpace:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> backSpace </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> doubleQuote:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> doubleQuote </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printString </identifier>
	<symbol> ( </symbol>
	<stringConstant> newLine:  </stringConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> printInt </identifier>
	<symbol> ( </symbol>
	<identifier> String </identifier>
	<symbol> . </symbol>
	<identifier> newLine </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Output </identifier>
	<symbol> . </symbol>
	<identifier> println </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> i </identifier>
	<symbol> . </symbol>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> s </identifier>
	<symbol> . </symbol>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>