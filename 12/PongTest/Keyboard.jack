class Keyboard {

    // for internal user only
    function void init() {
        return;
    }

    // returns the character of the currently pressed
    // key on the keyboard; if no key is currently pressed,
    // returns 0;
    function char keyPressed() {
        return Memory.peek(24576);
    }

    // waits until a key is pressed on the keyboard and 
    // released, then echoes the key to the screen and returns
    // the character of the pressed key.
    function char readChar() {
        var char c, temp;
        while (true) {
            let temp = Keyboard.keyPressed();
            if (temp = 0) {
                if (~(c = 0)) {
                    do Output.printChar(c);
                    return c;
                }
            } else {
                let c = temp;                
            }            
        }        
        return c;
    }

    // prints the message on the screen,
    // reads the line (text until a newline character is dected)
    // from the keyboard, echoes the line to the screen, and 
    // returns its integer value (until the first non-digit)
    // character in the line is dected). This function also
    // handles user backspaces.
    function String readLine(String message) {
        var String str;
        var char c;
        let str = String.new(63);
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            if (c = 128) { // newline
                return str;
            }
            if (c = 129) {
                do Output.backSpace();
                do str.eraseLastChar();
            }
            if (~(c = 0)) {
                do str.appendChar(c);                
            } 
        }
        return "ERROR";
    }

    // prints the message on the screen, reads the line (text
    // unitl a newline character is detected) from the keyboard,
    // echoes the line to the screen, and returns its integer
    // value (until the first non-digit character in the line is
    // detected). This function also handles user backspaces.
    function int readInt(String message) {
        var String str;
        var char c;
        let str = String.new(63);
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            if (c = 128) { // newline
                return str.intValue();
            }
            if (c = 129) {
                do Output.backSpace();
                do str.eraseLastChar();
            }
            if (~(c = 0)) {
                do str.appendChar(c);                
            } 
        }
        return -32202;
    }

}