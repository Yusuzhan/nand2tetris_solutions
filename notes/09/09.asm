@261 // bootstrap
D=A
@SP
M=D
@BOOTSTRAP
D=A
@256
M=D
@Sys.init
0;JMP
(BOOTSTRAP)
(Sys.init) // function Sys.init 0
@LBL_RET_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@Main.main
0;JMP
(LBL_RET_0)
(Sys$WHILE) // label WHILE
@Sys$WHILE
0;JMP
(Main.main) // function Main.main 0
@12 // push constant 12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@1
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.new
0;JMP
(LBL_RET_1)
@72 // push constant 72
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_2)
@101 // push constant 101
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_3)
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_4)
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_5)
@111 // push constant 111
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_6)
@32 // push constant 32
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_7)
@119 // push constant 119
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_8
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_8)
@111 // push constant 111
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_9)
@114 // push constant 114
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_10
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_10)
@108 // push constant 108
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_11
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_11)
@100 // push constant 100
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_12
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_12)
@33 // push constant 33
D=A
@SP
A=M
M=D
@SP
M=M+1
@LBL_RET_13
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@2
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(LBL_RET_13)
@LBL_RET_14
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@1
D=D-A
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(LBL_RET_14)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@LBL_RET_15
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5 // ARG=SP-n-5 
D=A
@SP
D=M-D
@ARG
M=D
@SP // LCL=SP
D=M
@LCL
M=D
@Output.println
0;JMP
(LBL_RET_15)
@SP // pop temp 0
M=M-1
A=M
D=M
@R5
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@5 // return
D=A
@LCL
A=M-D
D=M
@14
M=D
@SP // *ARG = pop()
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG // SP = ARG + 1
D=M
@SP
M=D+1
@LCL // THAT=*(FRAME-1)
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@LCL // THIS=*(FRAME-2)
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@LCL
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@LCL
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@14
A=M
0;JMP
